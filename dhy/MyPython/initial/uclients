
uclient:     file format elf64-x86-64


Disassembly of section .interp:

0000000000400200 <.interp>:
  400200:	2f                   	(bad)  
  400201:	6c                   	ins    BYTE PTR es:[rdi],dx
  400202:	69 62 36 34 2f 6c 64 	imul   esp,DWORD PTR [rdx+0x36],0x646c2f34
  400209:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  40020e:	78 2d                	js     40023d <_init-0x3c3>
  400210:	78 38                	js     40024a <_init-0x3b6>
  400212:	36                   	ss
  400213:	2d 36 34 2e 73       	sub    eax,0x732e3436
  400218:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400219:	2e 32 00             	xor    al,BYTE PTR cs:[rax]

Disassembly of section .note.ABI-tag:

000000000040021c <.note.ABI-tag>:
  40021c:	04 00                	add    al,0x0
  40021e:	00 00                	add    BYTE PTR [rax],al
  400220:	10 00                	adc    BYTE PTR [rax],al
  400222:	00 00                	add    BYTE PTR [rax],al
  400224:	01 00                	add    DWORD PTR [rax],eax
  400226:	00 00                	add    BYTE PTR [rax],al
  400228:	47                   	rex.RXB
  400229:	4e 55                	rex.WRX push rbp
  40022b:	00 00                	add    BYTE PTR [rax],al
  40022d:	00 00                	add    BYTE PTR [rax],al
  40022f:	00 02                	add    BYTE PTR [rdx],al
  400231:	00 00                	add    BYTE PTR [rax],al
  400233:	00 06                	add    BYTE PTR [rsi],al
  400235:	00 00                	add    BYTE PTR [rax],al
  400237:	00 12                	add    BYTE PTR [rdx],dl
  400239:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

000000000040023c <.note.gnu.build-id>:
  40023c:	04 00                	add    al,0x0
  40023e:	00 00                	add    BYTE PTR [rax],al
  400240:	14 00                	adc    al,0x0
  400242:	00 00                	add    BYTE PTR [rax],al
  400244:	03 00                	add    eax,DWORD PTR [rax]
  400246:	00 00                	add    BYTE PTR [rax],al
  400248:	47                   	rex.RXB
  400249:	4e 55                	rex.WRX push rbp
  40024b:	00 1c 6b             	add    BYTE PTR [rbx+rbp*2],bl
  40024e:	0b 89 38 eb 5c 35    	or     ecx,DWORD PTR [rcx+0x355ceb38]
  400254:	23 59 05             	and    ebx,DWORD PTR [rcx+0x5]
  400257:	42 b2 d5             	rex.X mov dl,0xd5
  40025a:	57                   	push   rdi
  40025b:	a2                   	.byte 0xa2
  40025c:	82                   	(bad)  
  40025d:	14 94                	adc    al,0x94
  40025f:	c1                   	.byte 0xc1

Disassembly of section .gnu.hash:

0000000000400260 <.gnu.hash>:
  400260:	01 00                	add    DWORD PTR [rax],eax
  400262:	00 00                	add    BYTE PTR [rax],al
  400264:	01 00                	add    DWORD PTR [rax],eax
  400266:	00 00                	add    BYTE PTR [rax],al
  400268:	01 00                	add    DWORD PTR [rax],eax
	...

Disassembly of section .dynsym:

0000000000400280 <.dynsym>:
	...
  400298:	3f                   	(bad)  
  400299:	00 00                	add    BYTE PTR [rax],al
  40029b:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002ad:	00 00                	add    BYTE PTR [rax],al
  4002af:	00 01                	add    BYTE PTR [rcx],al
  4002b1:	00 00                	add    BYTE PTR [rax],al
  4002b3:	00 20                	add    BYTE PTR [rax],ah
	...
  4002c5:	00 00                	add    BYTE PTR [rax],al
  4002c7:	00 3a                	add    BYTE PTR [rdx],bh
  4002c9:	00 00                	add    BYTE PTR [rax],al
  4002cb:	00 12                	add    BYTE PTR [rdx],dl
	...
  4002dd:	00 00                	add    BYTE PTR [rax],al
  4002df:	00 2d 00 00 00 12    	add    BYTE PTR [rip+0x12000000],ch        # 124002e5 <_end+0x11dfe695>
	...
  4002f5:	00 00                	add    BYTE PTR [rax],al
  4002f7:	00 28                	add    BYTE PTR [rax],ch
  4002f9:	00 00                	add    BYTE PTR [rax],al
  4002fb:	00 12                	add    BYTE PTR [rdx],dl
	...
  40030d:	00 00                	add    BYTE PTR [rax],al
  40030f:	00 6a 00             	add    BYTE PTR [rdx+0x0],ch
  400312:	00 00                	add    BYTE PTR [rax],al
  400314:	12 00                	adc    al,BYTE PTR [rax]
	...
  400326:	00 00                	add    BYTE PTR [rax],al
  400328:	57                   	push   rdi
  400329:	00 00                	add    BYTE PTR [rax],al
  40032b:	00 12                	add    BYTE PTR [rdx],dl
	...
  40033d:	00 00                	add    BYTE PTR [rax],al
  40033f:	00 64 00 00          	add    BYTE PTR [rax+rax*1+0x0],ah
  400343:	00 12                	add    BYTE PTR [rdx],dl
	...
  400355:	00 00                	add    BYTE PTR [rax],al
  400357:	00 50 00             	add    BYTE PTR [rax+0x0],dl
  40035a:	00 00                	add    BYTE PTR [rax],al
  40035c:	12 00                	adc    al,BYTE PTR [rax]
	...
  40036e:	00 00                	add    BYTE PTR [rax],al
  400370:	1a 00                	sbb    al,BYTE PTR [rax]
  400372:	00 00                	add    BYTE PTR [rax],al
  400374:	12 00                	adc    al,BYTE PTR [rax]
	...
  400386:	00 00                	add    BYTE PTR [rax],al
  400388:	21 00                	and    DWORD PTR [rax],eax
  40038a:	00 00                	add    BYTE PTR [rax],al
  40038c:	12 00                	adc    al,BYTE PTR [rax]
	...
  40039e:	00 00                	add    BYTE PTR [rax],al
  4003a0:	5d                   	pop    rbp
  4003a1:	00 00                	add    BYTE PTR [rax],al
  4003a3:	00 12                	add    BYTE PTR [rdx],dl
	...
  4003b5:	00 00                	add    BYTE PTR [rax],al
  4003b7:	00 33                	add    BYTE PTR [rbx],dh
  4003b9:	00 00                	add    BYTE PTR [rax],al
  4003bb:	00 12                	add    BYTE PTR [rdx],dl
	...
  4003cd:	00 00                	add    BYTE PTR [rax],al
  4003cf:	00 46 00             	add    BYTE PTR [rsi+0x0],al
  4003d2:	00 00                	add    BYTE PTR [rax],al
  4003d4:	12 00                	adc    al,BYTE PTR [rax]
	...

Disassembly of section .dynstr:

00000000004003e8 <.dynstr>:
  4003e8:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
  4003eb:	67 6d                	ins    DWORD PTR es:[edi],dx
  4003ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  4003ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  4003ef:	5f                   	pop    rdi
  4003f0:	73 74                	jae    400466 <_init-0x19a>
  4003f2:	61                   	(bad)  
  4003f3:	72 74                	jb     400469 <_init-0x197>
  4003f5:	5f                   	pop    rdi
  4003f6:	5f                   	pop    rdi
  4003f7:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
  4003fb:	63 2e                	movsxd ebp,DWORD PTR [rsi]
  4003fd:	73 6f                	jae    40046e <_init-0x192>
  4003ff:	2e 36 00 73 6f       	cs add BYTE PTR cs:ss:[rbx+0x6f],dh
  400404:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
  400407:	74 00                	je     400409 <_init-0x1f7>
  400409:	73 74                	jae    40047f <_init-0x181>
  40040b:	72 63                	jb     400470 <_init-0x190>
  40040d:	70 79                	jo     400488 <_init-0x178>
  40040f:	00 65 78             	add    BYTE PTR [rbp+0x78],ah
  400412:	69 74 00 68 74 6f 6e 	imul   esi,DWORD PTR [rax+rax*1+0x68],0x736e6f74
  400419:	73 
  40041a:	00 70 65             	add    BYTE PTR [rax+0x65],dh
  40041d:	72 72                	jb     400491 <_init-0x16f>
  40041f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400420:	72 00                	jb     400422 <_init-0x1de>
  400422:	70 75                	jo     400499 <_init-0x167>
  400424:	74 73                	je     400499 <_init-0x167>
  400426:	00 70 72             	add    BYTE PTR [rax+0x72],dh
  400429:	69 6e 74 66 00 69 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e690066
  400430:	65                   	gs
  400431:	74 5f                	je     400492 <_init-0x16e>
  400433:	61                   	(bad)  
  400434:	64                   	fs
  400435:	64                   	fs
  400436:	72 00                	jb     400438 <_init-0x1c8>
  400438:	73 74                	jae    4004ae <_init-0x152>
  40043a:	72 63                	jb     40049f <_init-0x161>
  40043c:	61                   	(bad)  
  40043d:	74 00                	je     40043f <_init-0x1c1>
  40043f:	62                   	(bad)  
  400440:	7a 65                	jp     4004a7 <_init-0x159>
  400442:	72 6f                	jb     4004b3 <_init-0x14d>
  400444:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
  400447:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400448:	64                   	fs
  400449:	74 6f                	je     4004ba <_init-0x146>
  40044b:	00 73 6c             	add    BYTE PTR [rbx+0x6c],dh
  40044e:	65                   	gs
  40044f:	65                   	gs
  400450:	70 00                	jo     400452 <_init-0x1ae>
  400452:	5f                   	pop    rdi
  400453:	5f                   	pop    rdi
  400454:	6c                   	ins    BYTE PTR es:[rdi],dx
  400455:	69 62 63 5f 73 74 61 	imul   esp,DWORD PTR [rdx+0x63],0x6174735f
  40045c:	72 74                	jb     4004d2 <_init-0x12e>
  40045e:	5f                   	pop    rdi
  40045f:	6d                   	ins    DWORD PTR es:[rdi],dx
  400460:	61                   	(bad)  
  400461:	69 6e 00 47 4c 49 42 	imul   ebp,DWORD PTR [rsi+0x0],0x42494c47
  400468:	43 5f                	rex.XB pop r15
  40046a:	32 2e                	xor    ch,BYTE PTR [rsi]
  40046c:	32 2e                	xor    ch,BYTE PTR [rsi]
  40046e:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000400470 <.gnu.version>:
  400470:	00 00                	add    BYTE PTR [rax],al
  400472:	02 00                	add    al,BYTE PTR [rax]
  400474:	00 00                	add    BYTE PTR [rax],al
  400476:	02 00                	add    al,BYTE PTR [rax]
  400478:	02 00                	add    al,BYTE PTR [rax]
  40047a:	02 00                	add    al,BYTE PTR [rax]
  40047c:	02 00                	add    al,BYTE PTR [rax]
  40047e:	02 00                	add    al,BYTE PTR [rax]
  400480:	02 00                	add    al,BYTE PTR [rax]
  400482:	02 00                	add    al,BYTE PTR [rax]
  400484:	02 00                	add    al,BYTE PTR [rax]
  400486:	02 00                	add    al,BYTE PTR [rax]
  400488:	02 00                	add    al,BYTE PTR [rax]
  40048a:	02 00                	add    al,BYTE PTR [rax]
  40048c:	02 00                	add    al,BYTE PTR [rax]

Disassembly of section .gnu.version_r:

0000000000400490 <.gnu.version_r>:
  400490:	01 00                	add    DWORD PTR [rax],eax
  400492:	01 00                	add    DWORD PTR [rax],eax
  400494:	10 00                	adc    BYTE PTR [rax],al
  400496:	00 00                	add    BYTE PTR [rax],al
  400498:	10 00                	adc    BYTE PTR [rax],al
  40049a:	00 00                	add    BYTE PTR [rax],al
  40049c:	00 00                	add    BYTE PTR [rax],al
  40049e:	00 00                	add    BYTE PTR [rax],al
  4004a0:	75 1a                	jne    4004bc <_init-0x144>
  4004a2:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
  4004a8:	7c 00                	jl     4004aa <_init-0x156>
  4004aa:	00 00                	add    BYTE PTR [rax],al
  4004ac:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

00000000004004b0 <.rela.dyn>:
  4004b0:	40 12 60 00          	adc    spl,BYTE PTR [rax+0x0]
  4004b4:	00 00                	add    BYTE PTR [rax],al
  4004b6:	00 00                	add    BYTE PTR [rax],al
  4004b8:	06                   	(bad)  
  4004b9:	00 00                	add    BYTE PTR [rax],al
  4004bb:	00 02                	add    BYTE PTR [rdx],al
	...

Disassembly of section .rela.plt:

00000000004004c8 <.rela.plt>:
  4004c8:	60                   	(bad)  
  4004c9:	12 60 00             	adc    ah,BYTE PTR [rax+0x0]
  4004cc:	00 00                	add    BYTE PTR [rax],al
  4004ce:	00 00                	add    BYTE PTR [rax],al
  4004d0:	07                   	(bad)  
  4004d1:	00 00                	add    BYTE PTR [rax],al
  4004d3:	00 01                	add    BYTE PTR [rcx],al
	...
  4004dd:	00 00                	add    BYTE PTR [rax],al
  4004df:	00 68 12             	add    BYTE PTR [rax+0x12],ch
  4004e2:	60                   	(bad)  
  4004e3:	00 00                	add    BYTE PTR [rax],al
  4004e5:	00 00                	add    BYTE PTR [rax],al
  4004e7:	00 07                	add    BYTE PTR [rdi],al
  4004e9:	00 00                	add    BYTE PTR [rax],al
  4004eb:	00 03                	add    BYTE PTR [rbx],al
	...
  4004f5:	00 00                	add    BYTE PTR [rax],al
  4004f7:	00 70 12             	add    BYTE PTR [rax+0x12],dh
  4004fa:	60                   	(bad)  
  4004fb:	00 00                	add    BYTE PTR [rax],al
  4004fd:	00 00                	add    BYTE PTR [rax],al
  4004ff:	00 07                	add    BYTE PTR [rdi],al
  400501:	00 00                	add    BYTE PTR [rax],al
  400503:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
  40050e:	00 00                	add    BYTE PTR [rax],al
  400510:	78 12                	js     400524 <_init-0xdc>
  400512:	60                   	(bad)  
  400513:	00 00                	add    BYTE PTR [rax],al
  400515:	00 00                	add    BYTE PTR [rax],al
  400517:	00 07                	add    BYTE PTR [rdi],al
  400519:	00 00                	add    BYTE PTR [rax],al
  40051b:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 400521 <_init-0xdf>
  400521:	00 00                	add    BYTE PTR [rax],al
  400523:	00 00                	add    BYTE PTR [rax],al
  400525:	00 00                	add    BYTE PTR [rax],al
  400527:	00 80 12 60 00 00    	add    BYTE PTR [rax+0x6012],al
  40052d:	00 00                	add    BYTE PTR [rax],al
  40052f:	00 07                	add    BYTE PTR [rdi],al
  400531:	00 00                	add    BYTE PTR [rax],al
  400533:	00 06                	add    BYTE PTR [rsi],al
	...
  40053d:	00 00                	add    BYTE PTR [rax],al
  40053f:	00 88 12 60 00 00    	add    BYTE PTR [rax+0x6012],cl
  400545:	00 00                	add    BYTE PTR [rax],al
  400547:	00 07                	add    BYTE PTR [rdi],al
  400549:	00 00                	add    BYTE PTR [rax],al
  40054b:	00 07                	add    BYTE PTR [rdi],al
	...
  400555:	00 00                	add    BYTE PTR [rax],al
  400557:	00 90 12 60 00 00    	add    BYTE PTR [rax+0x6012],dl
  40055d:	00 00                	add    BYTE PTR [rax],al
  40055f:	00 07                	add    BYTE PTR [rdi],al
  400561:	00 00                	add    BYTE PTR [rax],al
  400563:	00 08                	add    BYTE PTR [rax],cl
	...
  40056d:	00 00                	add    BYTE PTR [rax],al
  40056f:	00 98 12 60 00 00    	add    BYTE PTR [rax+0x6012],bl
  400575:	00 00                	add    BYTE PTR [rax],al
  400577:	00 07                	add    BYTE PTR [rdi],al
  400579:	00 00                	add    BYTE PTR [rax],al
  40057b:	00 09                	add    BYTE PTR [rcx],cl
	...
  400585:	00 00                	add    BYTE PTR [rax],al
  400587:	00 a0 12 60 00 00    	add    BYTE PTR [rax+0x6012],ah
  40058d:	00 00                	add    BYTE PTR [rax],al
  40058f:	00 07                	add    BYTE PTR [rdi],al
  400591:	00 00                	add    BYTE PTR [rax],al
  400593:	00 0a                	add    BYTE PTR [rdx],cl
	...
  40059d:	00 00                	add    BYTE PTR [rax],al
  40059f:	00 a8 12 60 00 00    	add    BYTE PTR [rax+0x6012],ch
  4005a5:	00 00                	add    BYTE PTR [rax],al
  4005a7:	00 07                	add    BYTE PTR [rdi],al
  4005a9:	00 00                	add    BYTE PTR [rax],al
  4005ab:	00 0b                	add    BYTE PTR [rbx],cl
	...
  4005b5:	00 00                	add    BYTE PTR [rax],al
  4005b7:	00 b0 12 60 00 00    	add    BYTE PTR [rax+0x6012],dh
  4005bd:	00 00                	add    BYTE PTR [rax],al
  4005bf:	00 07                	add    BYTE PTR [rdi],al
  4005c1:	00 00                	add    BYTE PTR [rax],al
  4005c3:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
	...
  4005ce:	00 00                	add    BYTE PTR [rax],al
  4005d0:	b8 12 60 00 00       	mov    eax,0x6012
  4005d5:	00 00                	add    BYTE PTR [rax],al
  4005d7:	00 07                	add    BYTE PTR [rdi],al
  4005d9:	00 00                	add    BYTE PTR [rax],al
  4005db:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 4005e1 <_init-0x1f>
  4005e1:	00 00                	add    BYTE PTR [rax],al
  4005e3:	00 00                	add    BYTE PTR [rax],al
  4005e5:	00 00                	add    BYTE PTR [rax],al
  4005e7:	00 c0                	add    al,al
  4005e9:	12 60 00             	adc    ah,BYTE PTR [rax+0x0]
  4005ec:	00 00                	add    BYTE PTR [rax],al
  4005ee:	00 00                	add    BYTE PTR [rax],al
  4005f0:	07                   	(bad)  
  4005f1:	00 00                	add    BYTE PTR [rax],al
  4005f3:	00 0e                	add    BYTE PTR [rsi],cl
	...

Disassembly of section .init:

0000000000400600 <_init>:
  400600:	48 83 ec 08          	sub    rsp,0x8
  400604:	e8 23 01 00 00       	call   40072c <call_gmon_start>
  400609:	e8 b2 01 00 00       	call   4007c0 <frame_dummy>
  40060e:	e8 7d 06 00 00       	call   400c90 <__do_global_ctors_aux>
  400613:	48 83 c4 08          	add    rsp,0x8
  400617:	c3                   	ret    

Disassembly of section .plt:

0000000000400618 <printf@plt-0x10>:
  400618:	ff 35 32 0c 20 00    	push   QWORD PTR [rip+0x200c32]        # 601250 <_GLOBAL_OFFSET_TABLE_+0x8>
  40061e:	ff 25 34 0c 20 00    	jmp    QWORD PTR [rip+0x200c34]        # 601258 <_GLOBAL_OFFSET_TABLE_+0x10>
  400624:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000400628 <printf@plt>:
  400628:	ff 25 32 0c 20 00    	jmp    QWORD PTR [rip+0x200c32]        # 601260 <_GLOBAL_OFFSET_TABLE_+0x18>
  40062e:	68 00 00 00 00       	push   0x0
  400633:	e9 e0 ff ff ff       	jmp    400618 <_init+0x18>

0000000000400638 <puts@plt>:
  400638:	ff 25 2a 0c 20 00    	jmp    QWORD PTR [rip+0x200c2a]        # 601268 <_GLOBAL_OFFSET_TABLE_+0x20>
  40063e:	68 01 00 00 00       	push   0x1
  400643:	e9 d0 ff ff ff       	jmp    400618 <_init+0x18>

0000000000400648 <htons@plt>:
  400648:	ff 25 22 0c 20 00    	jmp    QWORD PTR [rip+0x200c22]        # 601270 <_GLOBAL_OFFSET_TABLE_+0x28>
  40064e:	68 02 00 00 00       	push   0x2
  400653:	e9 c0 ff ff ff       	jmp    400618 <_init+0x18>

0000000000400658 <exit@plt>:
  400658:	ff 25 1a 0c 20 00    	jmp    QWORD PTR [rip+0x200c1a]        # 601278 <_GLOBAL_OFFSET_TABLE_+0x30>
  40065e:	68 03 00 00 00       	push   0x3
  400663:	e9 b0 ff ff ff       	jmp    400618 <_init+0x18>

0000000000400668 <__libc_start_main@plt>:
  400668:	ff 25 12 0c 20 00    	jmp    QWORD PTR [rip+0x200c12]        # 601280 <_GLOBAL_OFFSET_TABLE_+0x38>
  40066e:	68 04 00 00 00       	push   0x4
  400673:	e9 a0 ff ff ff       	jmp    400618 <_init+0x18>

0000000000400678 <bzero@plt>:
  400678:	ff 25 0a 0c 20 00    	jmp    QWORD PTR [rip+0x200c0a]        # 601288 <_GLOBAL_OFFSET_TABLE_+0x40>
  40067e:	68 05 00 00 00       	push   0x5
  400683:	e9 90 ff ff ff       	jmp    400618 <_init+0x18>

0000000000400688 <sleep@plt>:
  400688:	ff 25 02 0c 20 00    	jmp    QWORD PTR [rip+0x200c02]        # 601290 <_GLOBAL_OFFSET_TABLE_+0x48>
  40068e:	68 06 00 00 00       	push   0x6
  400693:	e9 80 ff ff ff       	jmp    400618 <_init+0x18>

0000000000400698 <strcat@plt>:
  400698:	ff 25 fa 0b 20 00    	jmp    QWORD PTR [rip+0x200bfa]        # 601298 <_GLOBAL_OFFSET_TABLE_+0x50>
  40069e:	68 07 00 00 00       	push   0x7
  4006a3:	e9 70 ff ff ff       	jmp    400618 <_init+0x18>

00000000004006a8 <socket@plt>:
  4006a8:	ff 25 f2 0b 20 00    	jmp    QWORD PTR [rip+0x200bf2]        # 6012a0 <_GLOBAL_OFFSET_TABLE_+0x58>
  4006ae:	68 08 00 00 00       	push   0x8
  4006b3:	e9 60 ff ff ff       	jmp    400618 <_init+0x18>

00000000004006b8 <strcpy@plt>:
  4006b8:	ff 25 ea 0b 20 00    	jmp    QWORD PTR [rip+0x200bea]        # 6012a8 <_GLOBAL_OFFSET_TABLE_+0x60>
  4006be:	68 09 00 00 00       	push   0x9
  4006c3:	e9 50 ff ff ff       	jmp    400618 <_init+0x18>

00000000004006c8 <sendto@plt>:
  4006c8:	ff 25 e2 0b 20 00    	jmp    QWORD PTR [rip+0x200be2]        # 6012b0 <_GLOBAL_OFFSET_TABLE_+0x68>
  4006ce:	68 0a 00 00 00       	push   0xa
  4006d3:	e9 40 ff ff ff       	jmp    400618 <_init+0x18>

00000000004006d8 <perror@plt>:
  4006d8:	ff 25 da 0b 20 00    	jmp    QWORD PTR [rip+0x200bda]        # 6012b8 <_GLOBAL_OFFSET_TABLE_+0x70>
  4006de:	68 0b 00 00 00       	push   0xb
  4006e3:	e9 30 ff ff ff       	jmp    400618 <_init+0x18>

00000000004006e8 <inet_addr@plt>:
  4006e8:	ff 25 d2 0b 20 00    	jmp    QWORD PTR [rip+0x200bd2]        # 6012c0 <_GLOBAL_OFFSET_TABLE_+0x78>
  4006ee:	68 0c 00 00 00       	push   0xc
  4006f3:	e9 20 ff ff ff       	jmp    400618 <_init+0x18>

Disassembly of section .text:

0000000000400700 <_start>:
  400700:	31 ed                	xor    ebp,ebp
  400702:	49 89 d1             	mov    r9,rdx
  400705:	5e                   	pop    rsi
  400706:	48 89 e2             	mov    rdx,rsp
  400709:	48 83 e4 f0          	and    rsp,0xfffffffffffffff0
  40070d:	50                   	push   rax
  40070e:	54                   	push   rsp
  40070f:	49 c7 c0 f0 0b 40 00 	mov    r8,0x400bf0
  400716:	48 c7 c1 00 0c 40 00 	mov    rcx,0x400c00
  40071d:	48 c7 c7 8c 0a 40 00 	mov    rdi,0x400a8c
  400724:	e8 3f ff ff ff       	call   400668 <__libc_start_main@plt>
  400729:	f4                   	hlt    
  40072a:	90                   	nop
  40072b:	90                   	nop

000000000040072c <call_gmon_start>:
  40072c:	48 83 ec 08          	sub    rsp,0x8
  400730:	48 8b 05 09 0b 20 00 	mov    rax,QWORD PTR [rip+0x200b09]        # 601240 <_DYNAMIC+0x190>
  400737:	48 85 c0             	test   rax,rax
  40073a:	74 02                	je     40073e <call_gmon_start+0x12>
  40073c:	ff d0                	call   rax
  40073e:	48 83 c4 08          	add    rsp,0x8
  400742:	c3                   	ret    
  400743:	90                   	nop
  400744:	90                   	nop
  400745:	90                   	nop
  400746:	90                   	nop
  400747:	90                   	nop
  400748:	90                   	nop
  400749:	90                   	nop
  40074a:	90                   	nop
  40074b:	90                   	nop
  40074c:	90                   	nop
  40074d:	90                   	nop
  40074e:	90                   	nop
  40074f:	90                   	nop

0000000000400750 <__do_global_dtors_aux>:
  400750:	55                   	push   rbp
  400751:	48 89 e5             	mov    rbp,rsp
  400754:	53                   	push   rbx
  400755:	48 83 ec 08          	sub    rsp,0x8
  400759:	80 3d 60 10 20 00 00 	cmp    BYTE PTR [rip+0x201060],0x0        # 6017c0 <__bss_start>
  400760:	75 4b                	jne    4007ad <__do_global_dtors_aux+0x5d>
  400762:	bb a0 10 60 00       	mov    ebx,0x6010a0
  400767:	48 8b 05 5a 10 20 00 	mov    rax,QWORD PTR [rip+0x20105a]        # 6017c8 <dtor_idx.6351>
  40076e:	48 81 eb 98 10 60 00 	sub    rbx,0x601098
  400775:	48 c1 fb 03          	sar    rbx,0x3
  400779:	48 83 eb 01          	sub    rbx,0x1
  40077d:	48 39 d8             	cmp    rax,rbx
  400780:	73 24                	jae    4007a6 <__do_global_dtors_aux+0x56>
  400782:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
  400788:	48 83 c0 01          	add    rax,0x1
  40078c:	48 89 05 35 10 20 00 	mov    QWORD PTR [rip+0x201035],rax        # 6017c8 <dtor_idx.6351>
  400793:	ff 14 c5 98 10 60 00 	call   QWORD PTR [rax*8+0x601098]
  40079a:	48 8b 05 27 10 20 00 	mov    rax,QWORD PTR [rip+0x201027]        # 6017c8 <dtor_idx.6351>
  4007a1:	48 39 d8             	cmp    rax,rbx
  4007a4:	72 e2                	jb     400788 <__do_global_dtors_aux+0x38>
  4007a6:	c6 05 13 10 20 00 01 	mov    BYTE PTR [rip+0x201013],0x1        # 6017c0 <__bss_start>
  4007ad:	48 83 c4 08          	add    rsp,0x8
  4007b1:	5b                   	pop    rbx
  4007b2:	c9                   	leave  
  4007b3:	c3                   	ret    
  4007b4:	66 66 66 2e 0f 1f 84 	data32 data32 nop WORD PTR cs:[rax+rax*1+0x0]
  4007bb:	00 00 00 00 00 

00000000004007c0 <frame_dummy>:
  4007c0:	48 83 3d e0 08 20 00 	cmp    QWORD PTR [rip+0x2008e0],0x0        # 6010a8 <__JCR_END__>
  4007c7:	00 
  4007c8:	55                   	push   rbp
  4007c9:	48 89 e5             	mov    rbp,rsp
  4007cc:	74 12                	je     4007e0 <frame_dummy+0x20>
  4007ce:	b8 00 00 00 00       	mov    eax,0x0
  4007d3:	48 85 c0             	test   rax,rax
  4007d6:	74 08                	je     4007e0 <frame_dummy+0x20>
  4007d8:	bf a8 10 60 00       	mov    edi,0x6010a8
  4007dd:	c9                   	leave  
  4007de:	ff e0                	jmp    rax
  4007e0:	c9                   	leave  
  4007e1:	c3                   	ret    
  4007e2:	90                   	nop
  4007e3:	90                   	nop

00000000004007e4 <func>:
  4007e4:	55                   	push   rbp
  4007e5:	48 89 e5             	mov    rbp,rsp
  4007e8:	48 83 ec 10          	sub    rsp,0x10
  4007ec:	48 89 7d f8          	mov    QWORD PTR [rbp-0x8],rdi
  4007f0:	89 75 f4             	mov    DWORD PTR [rbp-0xc],esi
  4007f3:	8b 0d 0b 0b 20 00    	mov    ecx,DWORD PTR [rip+0x200b0b]        # 601304 <count>
  4007f9:	ba 67 66 66 66       	mov    edx,0x66666667
  4007fe:	89 c8                	mov    eax,ecx
  400800:	f7 ea                	imul   edx
  400802:	c1 fa 02             	sar    edx,0x2
  400805:	89 c8                	mov    eax,ecx
  400807:	c1 f8 1f             	sar    eax,0x1f
  40080a:	29 c2                	sub    edx,eax
  40080c:	89 d0                	mov    eax,edx
  40080e:	c1 e0 02             	shl    eax,0x2
  400811:	01 d0                	add    eax,edx
  400813:	01 c0                	add    eax,eax
  400815:	89 ca                	mov    edx,ecx
  400817:	29 c2                	sub    edx,eax
  400819:	89 15 e5 0a 20 00    	mov    DWORD PTR [rip+0x200ae5],edx        # 601304 <count>
  40081f:	8d 41 01             	lea    eax,[rcx+0x1]
  400822:	89 05 dc 0a 20 00    	mov    DWORD PTR [rip+0x200adc],eax        # 601304 <count>
  400828:	48 8b 05 49 0b 20 00 	mov    rax,QWORD PTR [rip+0x200b49]        # 601378 <head>
  40082f:	48 89 c6             	mov    rsi,rax
  400832:	bf 00 18 60 00       	mov    edi,0x601800
  400837:	e8 7c fe ff ff       	call   4006b8 <strcpy@plt>
  40083c:	b8 2d 0d 40 00       	mov    eax,0x400d2d
  400841:	48 89 c6             	mov    rsi,rax
  400844:	bf 00 18 60 00       	mov    edi,0x601800
  400849:	e8 4a fe ff ff       	call   400698 <strcat@plt>
  40084e:	8b 05 b0 0a 20 00    	mov    eax,DWORD PTR [rip+0x200ab0]        # 601304 <count>
  400854:	48 98                	cdqe   
  400856:	48 8b 04 c5 80 13 60 	mov    rax,QWORD PTR [rax*8+0x601380]
  40085d:	00 
  40085e:	48 89 c6             	mov    rsi,rax
  400861:	bf 00 18 60 00       	mov    edi,0x601800
  400866:	e8 2d fe ff ff       	call   400698 <strcat@plt>
  40086b:	b8 38 0d 40 00       	mov    eax,0x400d38
  400870:	48 89 c6             	mov    rsi,rax
  400873:	bf 00 18 60 00       	mov    edi,0x601800
  400878:	e8 1b fe ff ff       	call   400698 <strcat@plt>
  40087d:	8b 45 f4             	mov    eax,DWORD PTR [rbp-0xc]
  400880:	48 98                	cdqe   
  400882:	48 8b 04 c5 00 1c 60 	mov    rax,QWORD PTR [rax*8+0x601c00]
  400889:	00 
  40088a:	48 89 c6             	mov    rsi,rax
  40088d:	bf 00 18 60 00       	mov    edi,0x601800
  400892:	e8 01 fe ff ff       	call   400698 <strcat@plt>
  400897:	b8 42 0d 40 00       	mov    eax,0x400d42
  40089c:	48 89 c6             	mov    rsi,rax
  40089f:	bf 00 18 60 00       	mov    edi,0x601800
  4008a4:	e8 ef fd ff ff       	call   400698 <strcat@plt>
  4008a9:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
  4008ad:	48 89 c6             	mov    rsi,rax
  4008b0:	bf 00 18 60 00       	mov    edi,0x601800
  4008b5:	e8 de fd ff ff       	call   400698 <strcat@plt>
  4008ba:	b8 54 0d 40 00       	mov    eax,0x400d54
  4008bf:	48 89 c6             	mov    rsi,rax
  4008c2:	bf 00 18 60 00       	mov    edi,0x601800
  4008c7:	e8 cc fd ff ff       	call   400698 <strcat@plt>
  4008cc:	b8 66 0d 40 00       	mov    eax,0x400d66
  4008d1:	be 00 18 60 00       	mov    esi,0x601800
  4008d6:	48 89 c7             	mov    rdi,rax
  4008d9:	b8 00 00 00 00       	mov    eax,0x0
  4008de:	e8 45 fd ff ff       	call   400628 <printf@plt>
  4008e3:	ba 40 1c 60 00       	mov    edx,0x601c40
  4008e8:	8b 05 f2 0e 20 00    	mov    eax,DWORD PTR [rip+0x200ef2]        # 6017e0 <sockfd>
  4008ee:	41 b9 10 00 00 00    	mov    r9d,0x10
  4008f4:	49 89 d0             	mov    r8,rdx
  4008f7:	b9 00 00 00 00       	mov    ecx,0x0
  4008fc:	ba 00 04 00 00       	mov    edx,0x400
  400901:	be 00 18 60 00       	mov    esi,0x601800
  400906:	89 c7                	mov    edi,eax
  400908:	e8 bb fd ff ff       	call   4006c8 <sendto@plt>
  40090d:	89 05 1d 13 20 00    	mov    DWORD PTR [rip+0x20131d],eax        # 601c30 <z>
  400913:	8b 05 17 13 20 00    	mov    eax,DWORD PTR [rip+0x201317]        # 601c30 <z>
  400919:	85 c0                	test   eax,eax
  40091b:	79 14                	jns    400931 <func+0x14d>
  40091d:	bf 7a 0d 40 00       	mov    edi,0x400d7a
  400922:	e8 b1 fd ff ff       	call   4006d8 <perror@plt>
  400927:	bf 01 00 00 00       	mov    edi,0x1
  40092c:	e8 27 fd ff ff       	call   400658 <exit@plt>
  400931:	83 7d f4 02          	cmp    DWORD PTR [rbp-0xc],0x2
  400935:	7e 14                	jle    40094b <func+0x167>
  400937:	bf 01 00 00 00       	mov    edi,0x1
  40093c:	e8 47 fd ff ff       	call   400688 <sleep@plt>
  400941:	bf 89 0d 40 00       	mov    edi,0x400d89
  400946:	e8 ed fc ff ff       	call   400638 <puts@plt>
  40094b:	c9                   	leave  
  40094c:	c3                   	ret    

000000000040094d <dirtydata1>:
  40094d:	55                   	push   rbp
  40094e:	48 89 e5             	mov    rbp,rsp
  400951:	bf 8e 0d 40 00       	mov    edi,0x400d8e
  400956:	e8 dd fc ff ff       	call   400638 <puts@plt>
  40095b:	be 03 00 00 00       	mov    esi,0x3
  400960:	bf 98 0d 40 00       	mov    edi,0x400d98
  400965:	e8 7a fe ff ff       	call   4007e4 <func>
  40096a:	c9                   	leave  
  40096b:	c3                   	ret    

000000000040096c <dirtydata2>:
  40096c:	55                   	push   rbp
  40096d:	48 89 e5             	mov    rbp,rsp
  400970:	bf 8e 0d 40 00       	mov    edi,0x400d8e
  400975:	e8 be fc ff ff       	call   400638 <puts@plt>
  40097a:	be 01 00 00 00       	mov    esi,0x1
  40097f:	bf 9a 0d 40 00       	mov    edi,0x400d9a
  400984:	e8 5b fe ff ff       	call   4007e4 <func>
  400989:	c9                   	leave  
  40098a:	c3                   	ret    

000000000040098b <milestone>:
  40098b:	55                   	push   rbp
  40098c:	48 89 e5             	mov    rbp,rsp
  40098f:	bf 9c 0d 40 00       	mov    edi,0x400d9c
  400994:	e8 9f fc ff ff       	call   400638 <puts@plt>
  400999:	be 03 00 00 00       	mov    esi,0x3
  40099e:	bf f1 0c 40 00       	mov    edi,0x400cf1
  4009a3:	e8 3c fe ff ff       	call   4007e4 <func>
  4009a8:	c9                   	leave  
  4009a9:	c3                   	ret    

00000000004009aa <test1>:
  4009aa:	55                   	push   rbp
  4009ab:	48 89 e5             	mov    rbp,rsp
  4009ae:	bf a6 0d 40 00       	mov    edi,0x400da6
  4009b3:	e8 80 fc ff ff       	call   400638 <puts@plt>
  4009b8:	be 01 00 00 00       	mov    esi,0x1
  4009bd:	bf e8 0c 40 00       	mov    edi,0x400ce8
  4009c2:	e8 1d fe ff ff       	call   4007e4 <func>
  4009c7:	c9                   	leave  
  4009c8:	c3                   	ret    

00000000004009c9 <test2>:
  4009c9:	55                   	push   rbp
  4009ca:	48 89 e5             	mov    rbp,rsp
  4009cd:	bf ac 0d 40 00       	mov    edi,0x400dac
  4009d2:	e8 61 fc ff ff       	call   400638 <puts@plt>
  4009d7:	be 01 00 00 00       	mov    esi,0x1
  4009dc:	bf eb 0c 40 00       	mov    edi,0x400ceb
  4009e1:	e8 fe fd ff ff       	call   4007e4 <func>
  4009e6:	b8 00 00 00 00       	mov    eax,0x0
  4009eb:	e8 ba ff ff ff       	call   4009aa <test1>
  4009f0:	c9                   	leave  
  4009f1:	c3                   	ret    

00000000004009f2 <test3>:
  4009f2:	55                   	push   rbp
  4009f3:	48 89 e5             	mov    rbp,rsp
  4009f6:	bf b2 0d 40 00       	mov    edi,0x400db2
  4009fb:	e8 38 fc ff ff       	call   400638 <puts@plt>
  400a00:	be 01 00 00 00       	mov    esi,0x1
  400a05:	bf ee 0c 40 00       	mov    edi,0x400cee
  400a0a:	e8 d5 fd ff ff       	call   4007e4 <func>
  400a0f:	b8 00 00 00 00       	mov    eax,0x0
  400a14:	e8 b0 ff ff ff       	call   4009c9 <test2>
  400a19:	c9                   	leave  
  400a1a:	c3                   	ret    

0000000000400a1b <func1>:
  400a1b:	55                   	push   rbp
  400a1c:	48 89 e5             	mov    rbp,rsp
  400a1f:	bf b8 0d 40 00       	mov    edi,0x400db8
  400a24:	e8 0f fc ff ff       	call   400638 <puts@plt>
  400a29:	be 01 00 00 00       	mov    esi,0x1
  400a2e:	bf ee 0c 40 00       	mov    edi,0x400cee
  400a33:	e8 ac fd ff ff       	call   4007e4 <func>
  400a38:	c9                   	leave  
  400a39:	c3                   	ret    

0000000000400a3a <func2>:
  400a3a:	55                   	push   rbp
  400a3b:	48 89 e5             	mov    rbp,rsp
  400a3e:	bf be 0d 40 00       	mov    edi,0x400dbe
  400a43:	e8 f0 fb ff ff       	call   400638 <puts@plt>
  400a48:	be 01 00 00 00       	mov    esi,0x1
  400a4d:	bf eb 0c 40 00       	mov    edi,0x400ceb
  400a52:	e8 8d fd ff ff       	call   4007e4 <func>
  400a57:	b8 00 00 00 00       	mov    eax,0x0
  400a5c:	e8 ba ff ff ff       	call   400a1b <func1>
  400a61:	c9                   	leave  
  400a62:	c3                   	ret    

0000000000400a63 <func3>:
  400a63:	55                   	push   rbp
  400a64:	48 89 e5             	mov    rbp,rsp
  400a67:	bf c4 0d 40 00       	mov    edi,0x400dc4
  400a6c:	e8 c7 fb ff ff       	call   400638 <puts@plt>
  400a71:	be 01 00 00 00       	mov    esi,0x1
  400a76:	bf e8 0c 40 00       	mov    edi,0x400ce8
  400a7b:	e8 64 fd ff ff       	call   4007e4 <func>
  400a80:	b8 00 00 00 00       	mov    eax,0x0
  400a85:	e8 b0 ff ff ff       	call   400a3a <func2>
  400a8a:	c9                   	leave  
  400a8b:	c3                   	ret    

0000000000400a8c <main>:
  400a8c:	55                   	push   rbp
  400a8d:	48 89 e5             	mov    rbp,rsp
  400a90:	48 83 ec 20          	sub    rsp,0x20
  400a94:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
  400a97:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
  400a9b:	48 c7 05 5a 11 20 00 	mov    QWORD PTR [rip+0x20115a],0x400dca        # 601c00 <buffer>
  400aa2:	ca 0d 40 00 
  400aa6:	48 c7 05 57 11 20 00 	mov    QWORD PTR [rip+0x201157],0x400dd6        # 601c08 <buffer+0x8>
  400aad:	d6 0d 40 00 
  400ab1:	48 c7 05 54 11 20 00 	mov    QWORD PTR [rip+0x201154],0x400de1        # 601c10 <buffer+0x10>
  400ab8:	e1 0d 40 00 
  400abc:	48 c7 05 51 11 20 00 	mov    QWORD PTR [rip+0x201151],0x400ded        # 601c18 <buffer+0x18>
  400ac3:	ed 0d 40 00 
  400ac7:	48 c7 05 4e 11 20 00 	mov    QWORD PTR [rip+0x20114e],0x400df8        # 601c20 <buffer+0x20>
  400ace:	f8 0d 40 00 
  400ad2:	48 c7 05 4b 11 20 00 	mov    QWORD PTR [rip+0x20114b],0x400e02        # 601c28 <buffer+0x28>
  400ad9:	02 0e 40 00 
  400add:	c6 05 1c 0d 20 00 00 	mov    BYTE PTR [rip+0x200d1c],0x0        # 601800 <data>
  400ae4:	c7 45 f4 00 00 00 00 	mov    DWORD PTR [rbp-0xc],0x0
  400aeb:	bf 0b 0e 40 00       	mov    edi,0x400e0b
  400af0:	e8 43 fb ff ff       	call   400638 <puts@plt>
  400af5:	66 c7 05 42 11 20 00 	mov    WORD PTR [rip+0x201142],0x2        # 601c40 <adr_srvr>
  400afc:	02 00 
  400afe:	8b 05 fc 07 20 00    	mov    eax,DWORD PTR [rip+0x2007fc]        # 601300 <port>
  400b04:	0f b7 c0             	movzx  eax,ax
  400b07:	89 c7                	mov    edi,eax
  400b09:	e8 3a fb ff ff       	call   400648 <htons@plt>
  400b0e:	66 89 05 2d 11 20 00 	mov    WORD PTR [rip+0x20112d],ax        # 601c42 <adr_srvr+0x2>
  400b15:	bf 21 0e 40 00       	mov    edi,0x400e21
  400b1a:	e8 c9 fb ff ff       	call   4006e8 <inet_addr@plt>
  400b1f:	89 05 1f 11 20 00    	mov    DWORD PTR [rip+0x20111f],eax        # 601c44 <adr_srvr+0x4>
  400b25:	be 08 00 00 00       	mov    esi,0x8
  400b2a:	bf 48 1c 60 00       	mov    edi,0x601c48
  400b2f:	e8 44 fb ff ff       	call   400678 <bzero@plt>
  400b34:	ba 00 00 00 00       	mov    edx,0x0
  400b39:	be 02 00 00 00       	mov    esi,0x2
  400b3e:	bf 02 00 00 00       	mov    edi,0x2
  400b43:	e8 60 fb ff ff       	call   4006a8 <socket@plt>
  400b48:	89 05 92 0c 20 00    	mov    DWORD PTR [rip+0x200c92],eax        # 6017e0 <sockfd>
  400b4e:	8b 05 8c 0c 20 00    	mov    eax,DWORD PTR [rip+0x200c8c]        # 6017e0 <sockfd>
  400b54:	83 f8 ff             	cmp    eax,0xffffffffffffffff
  400b57:	75 14                	jne    400b6d <main+0xe1>
  400b59:	bf 2f 0e 40 00       	mov    edi,0x400e2f
  400b5e:	e8 75 fb ff ff       	call   4006d8 <perror@plt>
  400b63:	bf 01 00 00 00       	mov    edi,0x1
  400b68:	e8 eb fa ff ff       	call   400658 <exit@plt>
  400b6d:	bf 3d 0e 40 00       	mov    edi,0x400e3d
  400b72:	e8 c1 fa ff ff       	call   400638 <puts@plt>
  400b77:	c7 45 f8 01 00 00 00 	mov    DWORD PTR [rbp-0x8],0x1
  400b7e:	c7 45 fc 01 00 00 00 	mov    DWORD PTR [rbp-0x4],0x1
  400b85:	bf 4b 0e 40 00       	mov    edi,0x400e4b
  400b8a:	e8 a9 fa ff ff       	call   400638 <puts@plt>
  400b8f:	b8 00 00 00 00       	mov    eax,0x0
  400b94:	e8 11 fe ff ff       	call   4009aa <test1>
  400b99:	b8 00 00 00 00       	mov    eax,0x0
  400b9e:	e8 97 fe ff ff       	call   400a3a <func2>
  400ba3:	b8 00 00 00 00       	mov    eax,0x0
  400ba8:	e8 1c fe ff ff       	call   4009c9 <test2>
  400bad:	b8 00 00 00 00       	mov    eax,0x0
  400bb2:	e8 96 fd ff ff       	call   40094d <dirtydata1>
  400bb7:	b8 00 00 00 00       	mov    eax,0x0
  400bbc:	e8 5a fe ff ff       	call   400a1b <func1>
  400bc1:	b8 00 00 00 00       	mov    eax,0x0
  400bc6:	e8 27 fe ff ff       	call   4009f2 <test3>
  400bcb:	b8 00 00 00 00       	mov    eax,0x0
  400bd0:	e8 b6 fd ff ff       	call   40098b <milestone>
  400bd5:	b8 00 00 00 00       	mov    eax,0x0
  400bda:	e8 84 fe ff ff       	call   400a63 <func3>
  400bdf:	eb ae                	jmp    400b8f <main+0x103>
  400be1:	90                   	nop
  400be2:	90                   	nop
  400be3:	90                   	nop
  400be4:	90                   	nop
  400be5:	90                   	nop
  400be6:	90                   	nop
  400be7:	90                   	nop
  400be8:	90                   	nop
  400be9:	90                   	nop
  400bea:	90                   	nop
  400beb:	90                   	nop
  400bec:	90                   	nop
  400bed:	90                   	nop
  400bee:	90                   	nop
  400bef:	90                   	nop

0000000000400bf0 <__libc_csu_fini>:
  400bf0:	f3 c3                	repz ret 
  400bf2:	66 66 66 66 66 2e 0f 	data32 data32 data32 data32 nop WORD PTR cs:[rax+rax*1+0x0]
  400bf9:	1f 84 00 00 00 00 00 

0000000000400c00 <__libc_csu_init>:
  400c00:	48 89 6c 24 d8       	mov    QWORD PTR [rsp-0x28],rbp
  400c05:	4c 89 64 24 e0       	mov    QWORD PTR [rsp-0x20],r12
  400c0a:	48 8d 2d 73 04 20 00 	lea    rbp,[rip+0x200473]        # 601084 <__init_array_end>
  400c11:	4c 8d 25 6c 04 20 00 	lea    r12,[rip+0x20046c]        # 601084 <__init_array_end>
  400c18:	4c 89 6c 24 e8       	mov    QWORD PTR [rsp-0x18],r13
  400c1d:	4c 89 74 24 f0       	mov    QWORD PTR [rsp-0x10],r14
  400c22:	4c 89 7c 24 f8       	mov    QWORD PTR [rsp-0x8],r15
  400c27:	48 89 5c 24 d0       	mov    QWORD PTR [rsp-0x30],rbx
  400c2c:	48 83 ec 38          	sub    rsp,0x38
  400c30:	4c 29 e5             	sub    rbp,r12
  400c33:	41 89 fd             	mov    r13d,edi
  400c36:	49 89 f6             	mov    r14,rsi
  400c39:	48 c1 fd 03          	sar    rbp,0x3
  400c3d:	49 89 d7             	mov    r15,rdx
  400c40:	e8 bb f9 ff ff       	call   400600 <_init>
  400c45:	48 85 ed             	test   rbp,rbp
  400c48:	74 1c                	je     400c66 <__libc_csu_init+0x66>
  400c4a:	31 db                	xor    ebx,ebx
  400c4c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
  400c50:	4c 89 fa             	mov    rdx,r15
  400c53:	4c 89 f6             	mov    rsi,r14
  400c56:	44 89 ef             	mov    edi,r13d
  400c59:	41 ff 14 dc          	call   QWORD PTR [r12+rbx*8]
  400c5d:	48 83 c3 01          	add    rbx,0x1
  400c61:	48 39 eb             	cmp    rbx,rbp
  400c64:	72 ea                	jb     400c50 <__libc_csu_init+0x50>
  400c66:	48 8b 5c 24 08       	mov    rbx,QWORD PTR [rsp+0x8]
  400c6b:	48 8b 6c 24 10       	mov    rbp,QWORD PTR [rsp+0x10]
  400c70:	4c 8b 64 24 18       	mov    r12,QWORD PTR [rsp+0x18]
  400c75:	4c 8b 6c 24 20       	mov    r13,QWORD PTR [rsp+0x20]
  400c7a:	4c 8b 74 24 28       	mov    r14,QWORD PTR [rsp+0x28]
  400c7f:	4c 8b 7c 24 30       	mov    r15,QWORD PTR [rsp+0x30]
  400c84:	48 83 c4 38          	add    rsp,0x38
  400c88:	c3                   	ret    
  400c89:	90                   	nop
  400c8a:	90                   	nop
  400c8b:	90                   	nop
  400c8c:	90                   	nop
  400c8d:	90                   	nop
  400c8e:	90                   	nop
  400c8f:	90                   	nop

0000000000400c90 <__do_global_ctors_aux>:
  400c90:	55                   	push   rbp
  400c91:	48 89 e5             	mov    rbp,rsp
  400c94:	53                   	push   rbx
  400c95:	48 83 ec 08          	sub    rsp,0x8
  400c99:	48 8b 05 e8 03 20 00 	mov    rax,QWORD PTR [rip+0x2003e8]        # 601088 <__CTOR_LIST__>
  400ca0:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
  400ca4:	74 19                	je     400cbf <__do_global_ctors_aux+0x2f>
  400ca6:	bb 88 10 60 00       	mov    ebx,0x601088
  400cab:	0f 1f 44 00 00       	nop    DWORD PTR [rax+rax*1+0x0]
  400cb0:	48 83 eb 08          	sub    rbx,0x8
  400cb4:	ff d0                	call   rax
  400cb6:	48 8b 03             	mov    rax,QWORD PTR [rbx]
  400cb9:	48 83 f8 ff          	cmp    rax,0xffffffffffffffff
  400cbd:	75 f1                	jne    400cb0 <__do_global_ctors_aux+0x20>
  400cbf:	48 83 c4 08          	add    rsp,0x8
  400cc3:	5b                   	pop    rbx
  400cc4:	c9                   	leave  
  400cc5:	c3                   	ret    
  400cc6:	90                   	nop
  400cc7:	90                   	nop

Disassembly of section .fini:

0000000000400cc8 <_fini>:
  400cc8:	48 83 ec 08          	sub    rsp,0x8
  400ccc:	e8 7f fa ff ff       	call   400750 <__do_global_dtors_aux>
  400cd1:	48 83 c4 08          	add    rsp,0x8
  400cd5:	c3                   	ret    

Disassembly of section .rodata:

0000000000400cd8 <_IO_stdin_used>:
  400cd8:	01 00                	add    DWORD PTR [rax],eax
  400cda:	02 00                	add    al,BYTE PTR [rax]
  400cdc:	00 00                	add    BYTE PTR [rax],al
	...

0000000000400ce0 <__dso_handle>:
	...
  400ce8:	41 32 00             	xor    al,BYTE PTR [r8]
  400ceb:	41 33 00             	xor    eax,DWORD PTR [r8]
  400cee:	41 35 00 42 00 00    	rex.B xor eax,0x4200
  400cf4:	00 00                	add    BYTE PTR [rax],al
  400cf6:	00 00                	add    BYTE PTR [rax],al
  400cf8:	3c 3f                	cmp    al,0x3f
  400cfa:	78 6d                	js     400d69 <__dso_handle+0x89>
  400cfc:	6c                   	ins    BYTE PTR es:[rdi],dx
  400cfd:	20 76 65             	and    BYTE PTR [rsi+0x65],dh
  400d00:	72 73                	jb     400d75 <__dso_handle+0x95>
  400d02:	69 6f 6e 3d 27 31 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
  400d09:	30 27                	xor    BYTE PTR [rdi],ah
  400d0b:	20 65 6e             	and    BYTE PTR [rbp+0x6e],ah
  400d0e:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
  400d11:	69 6e 67 3d 27 67 62 	imul   ebp,DWORD PTR [rsi+0x67],0x6267273d
  400d18:	32 33                	xor    dh,BYTE PTR [rbx]
  400d1a:	31 32                	xor    DWORD PTR [rdx],esi
  400d1c:	27                   	(bad)  
  400d1d:	20 3f                	and    BYTE PTR [rdi],bh
  400d1f:	3e 00 30             	add    BYTE PTR ds:[rax],dh
  400d22:	00 31                	add    BYTE PTR [rcx],dh
  400d24:	00 32                	add    BYTE PTR [rdx],dh
  400d26:	00 33                	add    BYTE PTR [rbx],dh
  400d28:	00 34 00             	add    BYTE PTR [rax+rax*1],dh
  400d2b:	35 00 3c 6e 6f       	xor    eax,0x6f6e3c00
  400d30:	74 65                	je     400d97 <__dso_handle+0xb7>
  400d32:	20 69 64             	and    BYTE PTR [rcx+0x64],ch
  400d35:	3d 27 00 27 3e       	cmp    eax,0x3e270027
  400d3a:	3c 74                	cmp    al,0x74
  400d3c:	69 74 6c 65 3e 00 3c 	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x2f3c003e
  400d43:	2f 
  400d44:	74 69                	je     400daf <__dso_handle+0xcf>
  400d46:	74 6c                	je     400db4 <__dso_handle+0xd4>
  400d48:	65                   	gs
  400d49:	3e                   	ds
  400d4a:	3c 6d                	cmp    al,0x6d
  400d4c:	65                   	gs
  400d4d:	73 73                	jae    400dc2 <__dso_handle+0xe2>
  400d4f:	61                   	(bad)  
  400d50:	67 65 3e 00 3c 2f    	gs add BYTE PTR ds:gs:[edi+ebp*1],bh
  400d56:	6d                   	ins    DWORD PTR es:[rdi],dx
  400d57:	65                   	gs
  400d58:	73 73                	jae    400dcd <__dso_handle+0xed>
  400d5a:	61                   	(bad)  
  400d5b:	67                   	addr32
  400d5c:	65                   	gs
  400d5d:	3e                   	ds
  400d5e:	3c 2f                	cmp    al,0x2f
  400d60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400d61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400d62:	74 65                	je     400dc9 <__dso_handle+0xe9>
  400d64:	3e 00 73 65          	add    BYTE PTR ds:[rbx+0x65],dh
  400d68:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400d69:	64 20 6d 65          	and    BYTE PTR fs:[rbp+0x65],ch
  400d6d:	73 73                	jae    400de2 <__dso_handle+0x102>
  400d6f:	61                   	(bad)  
  400d70:	67 65 20 3a          	and    BYTE PTR gs:[edx],bh
  400d74:	3a 25 73 2e 0a 00    	cmp    ah,BYTE PTR [rip+0xa2e73]        # 4a3bed <__FRAME_END__+0xa2b6d>
  400d7a:	72 65                	jb     400de1 <__dso_handle+0x101>
  400d7c:	63 76 66             	movsxd esi,DWORD PTR [rsi+0x66]
  400d7f:	72 6f                	jb     400df0 <__dso_handle+0x110>
  400d81:	6d                   	ins    DWORD PTR es:[rdi],dx
  400d82:	20 65 72             	and    BYTE PTR [rbp+0x72],ah
  400d85:	72 6f                	jb     400df6 <__dso_handle+0x116>
  400d87:	72 00                	jb     400d89 <__dso_handle+0xa9>
  400d89:	26 26 26 26 00 64 69 	es es es add BYTE PTR es:[rcx+rbp*2+0x72],ah
  400d90:	72 
  400d91:	74 79                	je     400e0c <__dso_handle+0x12c>
  400d93:	64                   	fs
  400d94:	61                   	(bad)  
  400d95:	74 61                	je     400df8 <__dso_handle+0x118>
  400d97:	00 44 00 43          	add    BYTE PTR [rax+rax*1+0x43],al
  400d9b:	00 6d 69             	add    BYTE PTR [rbp+0x69],ch
  400d9e:	6c                   	ins    BYTE PTR es:[rdi],dx
  400d9f:	65                   	gs
  400da0:	73 74                	jae    400e16 <__dso_handle+0x136>
  400da2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400da3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400da4:	65 00 74 65 73       	add    BYTE PTR gs:[rbp+riz*2+0x73],dh
  400da9:	74 31                	je     400ddc <__dso_handle+0xfc>
  400dab:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
  400daf:	74 32                	je     400de3 <__dso_handle+0x103>
  400db1:	00 74 65 73          	add    BYTE PTR [rbp+riz*2+0x73],dh
  400db5:	74 33                	je     400dea <__dso_handle+0x10a>
  400db7:	00 66 75             	add    BYTE PTR [rsi+0x75],ah
  400dba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400dbb:	63 31                	movsxd esi,DWORD PTR [rcx]
  400dbd:	00 66 75             	add    BYTE PTR [rsi+0x75],ah
  400dc0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400dc1:	63 32                	movsxd esi,DWORD PTR [rdx]
  400dc3:	00 66 75             	add    BYTE PTR [rsi+0x75],ah
  400dc6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400dc7:	63 33                	movsxd esi,DWORD PTR [rbx]
  400dc9:	00 50 6f             	add    BYTE PTR [rax+0x6f],dl
  400dcc:	6c                   	ins    BYTE PTR es:[rdi],dx
  400dcd:	6c                   	ins    BYTE PTR es:[rdi],dx
  400dce:	69 6e 67 44 61 74 61 	imul   ebp,DWORD PTR [rsi+0x67],0x61746144
  400dd5:	00 44 61 74          	add    BYTE PTR [rcx+riz*2+0x74],al
  400dd9:	61                   	(bad)  
  400dda:	55                   	push   rbp
  400ddb:	70 64                	jo     400e41 <__dso_handle+0x161>
  400ddd:	61                   	(bad)  
  400dde:	74 65                	je     400e45 <__dso_handle+0x165>
  400de0:	00 41 6c             	add    BYTE PTR [rcx+0x6c],al
  400de3:	61                   	(bad)  
  400de4:	72 6d                	jb     400e53 <__dso_handle+0x173>
  400de6:	55                   	push   rbp
  400de7:	70 64                	jo     400e4d <__dso_handle+0x16d>
  400de9:	61                   	(bad)  
  400dea:	74 65                	je     400e51 <__dso_handle+0x171>
  400dec:	00 50 72             	add    BYTE PTR [rax+0x72],dl
  400def:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400df0:	62                   	(bad)  
  400df1:	6c                   	ins    BYTE PTR es:[rdi],dx
  400df2:	65                   	gs
  400df3:	6d                   	ins    DWORD PTR es:[rdi],dx
  400df4:	41 63 6b 00          	movsxd ebp,DWORD PTR [r11+0x0]
  400df8:	4d                   	rex.WRB
  400df9:	64 43 6f             	rex.XB outs dx,DWORD PTR fs:[rsi]
  400dfc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400dfd:	74 72                	je     400e71 <__dso_handle+0x191>
  400dff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400e00:	6c                   	ins    BYTE PTR es:[rdi],dx
  400e01:	00 4d 64             	add    BYTE PTR [rbp+0x64],cl
  400e04:	41 63 74 69 6f       	movsxd esi,DWORD PTR [r9+rbp*2+0x6f]
  400e09:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400e0a:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
  400e0d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400e0e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400e0f:	65 63 74 69 6e       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6e]
  400e14:	67 20 73 65          	and    BYTE PTR [ebx+0x65],dh
  400e18:	72 76                	jb     400e90 <__dso_handle+0x1b0>
  400e1a:	65                   	gs
  400e1b:	72 2e                	jb     400e4b <__dso_handle+0x16b>
  400e1d:	2e 2e 2e 00 31       	cs cs add BYTE PTR cs:[rcx],dh
  400e22:	30 2e                	xor    BYTE PTR [rsi],ch
  400e24:	31 30                	xor    DWORD PTR [rax],esi
  400e26:	38 2e                	cmp    BYTE PTR [rsi],ch
  400e28:	31 36                	xor    DWORD PTR [rsi],esi
  400e2a:	35 2e 31 38 00       	xor    eax,0x38312e
  400e2f:	73 6f                	jae    400ea0 <__dso_handle+0x1c0>
  400e31:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
  400e34:	74 20                	je     400e56 <__dso_handle+0x176>
  400e36:	65                   	gs
  400e37:	72 72                	jb     400eab <__dso_handle+0x1cb>
  400e39:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  400e3a:	72 21                	jb     400e5d <__dso_handle+0x17d>
  400e3c:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
  400e3f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  400e40:	64 20 66 69          	and    BYTE PTR fs:[rsi+0x69],ah
  400e44:	6c                   	ins    BYTE PTR es:[rdi],dx
  400e45:	65 20 2e             	and    BYTE PTR gs:[rsi],ch
  400e48:	2e 2e 00 6d 61       	cs add BYTE PTR cs:[rbp+0x61],ch
  400e4d:	69                   	.byte 0x69
  400e4e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .eh_frame_hdr:

0000000000400e50 <.eh_frame_hdr>:
  400e50:	01 1b                	add    DWORD PTR [rbx],ebx
  400e52:	03 3b                	add    edi,DWORD PTR [rbx]
  400e54:	74 00                	je     400e56 <__dso_handle+0x176>
  400e56:	00 00                	add    BYTE PTR [rax],al
  400e58:	0d 00 00 00 94       	or     eax,0x94000000
  400e5d:	f9                   	stc    
  400e5e:	ff                   	(bad)  
  400e5f:	ff 90 00 00 00 fd    	call   QWORD PTR [rax-0x3000000]
  400e65:	fa                   	cli    
  400e66:	ff                   	(bad)  
  400e67:	ff b0 00 00 00 1c    	push   QWORD PTR [rax+0x1c000000]
  400e6d:	fb                   	sti    
  400e6e:	ff                   	(bad)  
  400e6f:	ff d0                	call   rax
  400e71:	00 00                	add    BYTE PTR [rax],al
  400e73:	00 3b                	add    BYTE PTR [rbx],bh
  400e75:	fb                   	sti    
  400e76:	ff                   	(bad)  
  400e77:	ff f0                	push   rax
  400e79:	00 00                	add    BYTE PTR [rax],al
  400e7b:	00 5a fb             	add    BYTE PTR [rdx-0x5],bl
  400e7e:	ff                   	(bad)  
  400e7f:	ff 10                	call   QWORD PTR [rax]
  400e81:	01 00                	add    DWORD PTR [rax],eax
  400e83:	00 79 fb             	add    BYTE PTR [rcx-0x5],bh
  400e86:	ff                   	(bad)  
  400e87:	ff 30                	push   QWORD PTR [rax]
  400e89:	01 00                	add    DWORD PTR [rax],eax
  400e8b:	00 a2 fb ff ff 50    	add    BYTE PTR [rdx+0x50fffffb],ah
  400e91:	01 00                	add    DWORD PTR [rax],eax
  400e93:	00 cb                	add    bl,cl
  400e95:	fb                   	sti    
  400e96:	ff                   	(bad)  
  400e97:	ff 70 01             	push   QWORD PTR [rax+0x1]
  400e9a:	00 00                	add    BYTE PTR [rax],al
  400e9c:	ea                   	(bad)  
  400e9d:	fb                   	sti    
  400e9e:	ff                   	(bad)  
  400e9f:	ff 90 01 00 00 13    	call   QWORD PTR [rax+0x13000001]
  400ea5:	fc                   	cld    
  400ea6:	ff                   	(bad)  
  400ea7:	ff b0 01 00 00 3c    	push   QWORD PTR [rax+0x3c000001]
  400ead:	fc                   	cld    
  400eae:	ff                   	(bad)  
  400eaf:	ff d0                	call   rax
  400eb1:	01 00                	add    DWORD PTR [rax],eax
  400eb3:	00 a0 fd ff ff f0    	add    BYTE PTR [rax-0xf000003],ah
  400eb9:	01 00                	add    DWORD PTR [rax],eax
  400ebb:	00 b0 fd ff ff 08    	add    BYTE PTR [rax+0x8fffffd],dh
  400ec1:	02 00                	add    al,BYTE PTR [rax]
	...

Disassembly of section .eh_frame:

0000000000400ec8 <__FRAME_END__-0x1b8>:
  400ec8:	14 00                	adc    al,0x0
  400eca:	00 00                	add    BYTE PTR [rax],al
  400ecc:	00 00                	add    BYTE PTR [rax],al
  400ece:	00 00                	add    BYTE PTR [rax],al
  400ed0:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
  400ed3:	00 01                	add    BYTE PTR [rcx],al
  400ed5:	78 10                	js     400ee7 <__dso_handle+0x207>
  400ed7:	01 1b                	add    DWORD PTR [rbx],ebx
  400ed9:	0c 07                	or     al,0x7
  400edb:	08 90 01 00 00 1c    	or     BYTE PTR [rax+0x1c000001],dl
  400ee1:	00 00                	add    BYTE PTR [rax],al
  400ee3:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
  400ee6:	00 00                	add    BYTE PTR [rax],al
  400ee8:	fc                   	cld    
  400ee9:	f8                   	clc    
  400eea:	ff                   	(bad)  
  400eeb:	ff 69 01             	jmp    FWORD PTR [rcx+0x1]
  400eee:	00 00                	add    BYTE PTR [rax],al
  400ef0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  400ef3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400ef9:	03 64 01 0c          	add    esp,DWORD PTR [rcx+rax*1+0xc]
  400efd:	07                   	(bad)  
  400efe:	08 00                	or     BYTE PTR [rax],al
  400f00:	1c 00                	sbb    al,0x0
  400f02:	00 00                	add    BYTE PTR [rax],al
  400f04:	3c 00                	cmp    al,0x0
  400f06:	00 00                	add    BYTE PTR [rax],al
  400f08:	45 fa                	rex.RB cli 
  400f0a:	ff                   	(bad)  
  400f0b:	ff 1f                	call   FWORD PTR [rdi]
  400f0d:	00 00                	add    BYTE PTR [rax],al
  400f0f:	00 00                	add    BYTE PTR [rax],al
  400f11:	41 0e                	rex.B (bad) 
  400f13:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400f19:	5a                   	pop    rdx
  400f1a:	0c 07                	or     al,0x7
  400f1c:	08 00                	or     BYTE PTR [rax],al
  400f1e:	00 00                	add    BYTE PTR [rax],al
  400f20:	1c 00                	sbb    al,0x0
  400f22:	00 00                	add    BYTE PTR [rax],al
  400f24:	5c                   	pop    rsp
  400f25:	00 00                	add    BYTE PTR [rax],al
  400f27:	00 44 fa ff          	add    BYTE PTR [rdx+rdi*8-0x1],al
  400f2b:	ff 1f                	call   FWORD PTR [rdi]
  400f2d:	00 00                	add    BYTE PTR [rax],al
  400f2f:	00 00                	add    BYTE PTR [rax],al
  400f31:	41 0e                	rex.B (bad) 
  400f33:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400f39:	5a                   	pop    rdx
  400f3a:	0c 07                	or     al,0x7
  400f3c:	08 00                	or     BYTE PTR [rax],al
  400f3e:	00 00                	add    BYTE PTR [rax],al
  400f40:	1c 00                	sbb    al,0x0
  400f42:	00 00                	add    BYTE PTR [rax],al
  400f44:	7c 00                	jl     400f46 <__dso_handle+0x266>
  400f46:	00 00                	add    BYTE PTR [rax],al
  400f48:	43 fa                	rex.XB cli 
  400f4a:	ff                   	(bad)  
  400f4b:	ff 1f                	call   FWORD PTR [rdi]
  400f4d:	00 00                	add    BYTE PTR [rax],al
  400f4f:	00 00                	add    BYTE PTR [rax],al
  400f51:	41 0e                	rex.B (bad) 
  400f53:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400f59:	5a                   	pop    rdx
  400f5a:	0c 07                	or     al,0x7
  400f5c:	08 00                	or     BYTE PTR [rax],al
  400f5e:	00 00                	add    BYTE PTR [rax],al
  400f60:	1c 00                	sbb    al,0x0
  400f62:	00 00                	add    BYTE PTR [rax],al
  400f64:	9c                   	pushf  
  400f65:	00 00                	add    BYTE PTR [rax],al
  400f67:	00 42 fa             	add    BYTE PTR [rdx-0x6],al
  400f6a:	ff                   	(bad)  
  400f6b:	ff 1f                	call   FWORD PTR [rdi]
  400f6d:	00 00                	add    BYTE PTR [rax],al
  400f6f:	00 00                	add    BYTE PTR [rax],al
  400f71:	41 0e                	rex.B (bad) 
  400f73:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400f79:	5a                   	pop    rdx
  400f7a:	0c 07                	or     al,0x7
  400f7c:	08 00                	or     BYTE PTR [rax],al
  400f7e:	00 00                	add    BYTE PTR [rax],al
  400f80:	1c 00                	sbb    al,0x0
  400f82:	00 00                	add    BYTE PTR [rax],al
  400f84:	bc 00 00 00 41       	mov    esp,0x41000000
  400f89:	fa                   	cli    
  400f8a:	ff                   	(bad)  
  400f8b:	ff 29                	jmp    FWORD PTR [rcx]
  400f8d:	00 00                	add    BYTE PTR [rax],al
  400f8f:	00 00                	add    BYTE PTR [rax],al
  400f91:	41 0e                	rex.B (bad) 
  400f93:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400f99:	64                   	fs
  400f9a:	0c 07                	or     al,0x7
  400f9c:	08 00                	or     BYTE PTR [rax],al
  400f9e:	00 00                	add    BYTE PTR [rax],al
  400fa0:	1c 00                	sbb    al,0x0
  400fa2:	00 00                	add    BYTE PTR [rax],al
  400fa4:	dc 00                	fadd   QWORD PTR [rax]
  400fa6:	00 00                	add    BYTE PTR [rax],al
  400fa8:	4a fa                	rex.WX cli 
  400faa:	ff                   	(bad)  
  400fab:	ff 29                	jmp    FWORD PTR [rcx]
  400fad:	00 00                	add    BYTE PTR [rax],al
  400faf:	00 00                	add    BYTE PTR [rax],al
  400fb1:	41 0e                	rex.B (bad) 
  400fb3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400fb9:	64                   	fs
  400fba:	0c 07                	or     al,0x7
  400fbc:	08 00                	or     BYTE PTR [rax],al
  400fbe:	00 00                	add    BYTE PTR [rax],al
  400fc0:	1c 00                	sbb    al,0x0
  400fc2:	00 00                	add    BYTE PTR [rax],al
  400fc4:	fc                   	cld    
  400fc5:	00 00                	add    BYTE PTR [rax],al
  400fc7:	00 53 fa             	add    BYTE PTR [rbx-0x6],dl
  400fca:	ff                   	(bad)  
  400fcb:	ff 1f                	call   FWORD PTR [rdi]
  400fcd:	00 00                	add    BYTE PTR [rax],al
  400fcf:	00 00                	add    BYTE PTR [rax],al
  400fd1:	41 0e                	rex.B (bad) 
  400fd3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400fd9:	5a                   	pop    rdx
  400fda:	0c 07                	or     al,0x7
  400fdc:	08 00                	or     BYTE PTR [rax],al
  400fde:	00 00                	add    BYTE PTR [rax],al
  400fe0:	1c 00                	sbb    al,0x0
  400fe2:	00 00                	add    BYTE PTR [rax],al
  400fe4:	1c 01                	sbb    al,0x1
  400fe6:	00 00                	add    BYTE PTR [rax],al
  400fe8:	52                   	push   rdx
  400fe9:	fa                   	cli    
  400fea:	ff                   	(bad)  
  400feb:	ff 29                	jmp    FWORD PTR [rcx]
  400fed:	00 00                	add    BYTE PTR [rax],al
  400fef:	00 00                	add    BYTE PTR [rax],al
  400ff1:	41 0e                	rex.B (bad) 
  400ff3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  400ff9:	64                   	fs
  400ffa:	0c 07                	or     al,0x7
  400ffc:	08 00                	or     BYTE PTR [rax],al
  400ffe:	00 00                	add    BYTE PTR [rax],al
  401000:	1c 00                	sbb    al,0x0
  401002:	00 00                	add    BYTE PTR [rax],al
  401004:	3c 01                	cmp    al,0x1
  401006:	00 00                	add    BYTE PTR [rax],al
  401008:	5b                   	pop    rbx
  401009:	fa                   	cli    
  40100a:	ff                   	(bad)  
  40100b:	ff 29                	jmp    FWORD PTR [rcx]
  40100d:	00 00                	add    BYTE PTR [rax],al
  40100f:	00 00                	add    BYTE PTR [rax],al
  401011:	41 0e                	rex.B (bad) 
  401013:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401019:	64                   	fs
  40101a:	0c 07                	or     al,0x7
  40101c:	08 00                	or     BYTE PTR [rax],al
  40101e:	00 00                	add    BYTE PTR [rax],al
  401020:	1c 00                	sbb    al,0x0
  401022:	00 00                	add    BYTE PTR [rax],al
  401024:	5c                   	pop    rsp
  401025:	01 00                	add    DWORD PTR [rax],eax
  401027:	00 64 fa ff          	add    BYTE PTR [rdx+rdi*8-0x1],ah
  40102b:	ff 55 01             	call   QWORD PTR [rbp+0x1]
  40102e:	00 00                	add    BYTE PTR [rax],al
  401030:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
  401033:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
  401039:	00 00                	add    BYTE PTR [rax],al
  40103b:	00 00                	add    BYTE PTR [rax],al
  40103d:	00 00                	add    BYTE PTR [rax],al
  40103f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  401042:	00 00                	add    BYTE PTR [rax],al
  401044:	7c 01                	jl     401047 <__dso_handle+0x367>
  401046:	00 00                	add    BYTE PTR [rax],al
  401048:	a8 fb                	test   al,0xfb
  40104a:	ff                   	(bad)  
  40104b:	ff 02                	inc    DWORD PTR [rdx]
	...
  401055:	00 00                	add    BYTE PTR [rax],al
  401057:	00 24 00             	add    BYTE PTR [rax+rax*1],ah
  40105a:	00 00                	add    BYTE PTR [rax],al
  40105c:	94                   	xchg   esp,eax
  40105d:	01 00                	add    DWORD PTR [rax],eax
  40105f:	00 a0 fb ff ff 89    	add    BYTE PTR [rax-0x76000005],ah
  401065:	00 00                	add    BYTE PTR [rax],al
  401067:	00 00                	add    BYTE PTR [rax],al
  401069:	51                   	push   rcx
  40106a:	8c 05 86 06 5f 0e    	mov    WORD PTR [rip+0xe5f0686],es        # e9f16f6 <_end+0xe3efaa6>
  401070:	40 83 07 8f          	rex add DWORD PTR [rdi],0xffffffffffffff8f
  401074:	02 8e 03 8d 04 02    	add    cl,BYTE PTR [rsi+0x2048d03]
  40107a:	58                   	pop    rax
  40107b:	0e                   	(bad)  
  40107c:	08 00                	or     BYTE PTR [rax],al
	...

0000000000401080 <__FRAME_END__>:
  401080:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .ctors:

0000000000601088 <__CTOR_LIST__>:
  601088:	ff                   	(bad)  
  601089:	ff                   	(bad)  
  60108a:	ff                   	(bad)  
  60108b:	ff                   	(bad)  
  60108c:	ff                   	(bad)  
  60108d:	ff                   	(bad)  
  60108e:	ff                   	(bad)  
  60108f:	ff 00                	inc    DWORD PTR [rax]

0000000000601090 <__CTOR_END__>:
	...

Disassembly of section .dtors:

0000000000601098 <__DTOR_LIST__>:
  601098:	ff                   	(bad)  
  601099:	ff                   	(bad)  
  60109a:	ff                   	(bad)  
  60109b:	ff                   	(bad)  
  60109c:	ff                   	(bad)  
  60109d:	ff                   	(bad)  
  60109e:	ff                   	(bad)  
  60109f:	ff 00                	inc    DWORD PTR [rax]

00000000006010a0 <__DTOR_END__>:
	...

Disassembly of section .jcr:

00000000006010a8 <__JCR_END__>:
	...

Disassembly of section .dynamic:

00000000006010b0 <_DYNAMIC>:
  6010b0:	01 00                	add    DWORD PTR [rax],eax
  6010b2:	00 00                	add    BYTE PTR [rax],al
  6010b4:	00 00                	add    BYTE PTR [rax],al
  6010b6:	00 00                	add    BYTE PTR [rax],al
  6010b8:	10 00                	adc    BYTE PTR [rax],al
  6010ba:	00 00                	add    BYTE PTR [rax],al
  6010bc:	00 00                	add    BYTE PTR [rax],al
  6010be:	00 00                	add    BYTE PTR [rax],al
  6010c0:	0c 00                	or     al,0x0
  6010c2:	00 00                	add    BYTE PTR [rax],al
  6010c4:	00 00                	add    BYTE PTR [rax],al
  6010c6:	00 00                	add    BYTE PTR [rax],al
  6010c8:	00 06                	add    BYTE PTR [rsi],al
  6010ca:	40 00 00             	add    BYTE PTR [rax],al
  6010cd:	00 00                	add    BYTE PTR [rax],al
  6010cf:	00 0d 00 00 00 00    	add    BYTE PTR [rip+0x0],cl        # 6010d5 <_DYNAMIC+0x25>
  6010d5:	00 00                	add    BYTE PTR [rax],al
  6010d7:	00 c8                	add    al,cl
  6010d9:	0c 40                	or     al,0x40
  6010db:	00 00                	add    BYTE PTR [rax],al
  6010dd:	00 00                	add    BYTE PTR [rax],al
  6010df:	00 f5                	add    ch,dh
  6010e1:	fe                   	(bad)  
  6010e2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  6010e5:	00 00                	add    BYTE PTR [rax],al
  6010e7:	00 60 02             	add    BYTE PTR [rax+0x2],ah
  6010ea:	40 00 00             	add    BYTE PTR [rax],al
  6010ed:	00 00                	add    BYTE PTR [rax],al
  6010ef:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 6010f5 <_DYNAMIC+0x45>
  6010f5:	00 00                	add    BYTE PTR [rax],al
  6010f7:	00 e8                	add    al,ch
  6010f9:	03 40 00             	add    eax,DWORD PTR [rax+0x0]
  6010fc:	00 00                	add    BYTE PTR [rax],al
  6010fe:	00 00                	add    BYTE PTR [rax],al
  601100:	06                   	(bad)  
  601101:	00 00                	add    BYTE PTR [rax],al
  601103:	00 00                	add    BYTE PTR [rax],al
  601105:	00 00                	add    BYTE PTR [rax],al
  601107:	00 80 02 40 00 00    	add    BYTE PTR [rax+0x4002],al
  60110d:	00 00                	add    BYTE PTR [rax],al
  60110f:	00 0a                	add    BYTE PTR [rdx],cl
  601111:	00 00                	add    BYTE PTR [rax],al
  601113:	00 00                	add    BYTE PTR [rax],al
  601115:	00 00                	add    BYTE PTR [rax],al
  601117:	00 88 00 00 00 00    	add    BYTE PTR [rax+0x0],cl
  60111d:	00 00                	add    BYTE PTR [rax],al
  60111f:	00 0b                	add    BYTE PTR [rbx],cl
  601121:	00 00                	add    BYTE PTR [rax],al
  601123:	00 00                	add    BYTE PTR [rax],al
  601125:	00 00                	add    BYTE PTR [rax],al
  601127:	00 18                	add    BYTE PTR [rax],bl
  601129:	00 00                	add    BYTE PTR [rax],al
  60112b:	00 00                	add    BYTE PTR [rax],al
  60112d:	00 00                	add    BYTE PTR [rax],al
  60112f:	00 15 00 00 00 00    	add    BYTE PTR [rip+0x0],dl        # 601135 <_DYNAMIC+0x85>
	...
  60113d:	00 00                	add    BYTE PTR [rax],al
  60113f:	00 03                	add    BYTE PTR [rbx],al
  601141:	00 00                	add    BYTE PTR [rax],al
  601143:	00 00                	add    BYTE PTR [rax],al
  601145:	00 00                	add    BYTE PTR [rax],al
  601147:	00 48 12             	add    BYTE PTR [rax+0x12],cl
  60114a:	60                   	(bad)  
  60114b:	00 00                	add    BYTE PTR [rax],al
  60114d:	00 00                	add    BYTE PTR [rax],al
  60114f:	00 02                	add    BYTE PTR [rdx],al
  601151:	00 00                	add    BYTE PTR [rax],al
  601153:	00 00                	add    BYTE PTR [rax],al
  601155:	00 00                	add    BYTE PTR [rax],al
  601157:	00 38                	add    BYTE PTR [rax],bh
  601159:	01 00                	add    DWORD PTR [rax],eax
  60115b:	00 00                	add    BYTE PTR [rax],al
  60115d:	00 00                	add    BYTE PTR [rax],al
  60115f:	00 14 00             	add    BYTE PTR [rax+rax*1],dl
  601162:	00 00                	add    BYTE PTR [rax],al
  601164:	00 00                	add    BYTE PTR [rax],al
  601166:	00 00                	add    BYTE PTR [rax],al
  601168:	07                   	(bad)  
  601169:	00 00                	add    BYTE PTR [rax],al
  60116b:	00 00                	add    BYTE PTR [rax],al
  60116d:	00 00                	add    BYTE PTR [rax],al
  60116f:	00 17                	add    BYTE PTR [rdi],dl
  601171:	00 00                	add    BYTE PTR [rax],al
  601173:	00 00                	add    BYTE PTR [rax],al
  601175:	00 00                	add    BYTE PTR [rax],al
  601177:	00 c8                	add    al,cl
  601179:	04 40                	add    al,0x40
  60117b:	00 00                	add    BYTE PTR [rax],al
  60117d:	00 00                	add    BYTE PTR [rax],al
  60117f:	00 07                	add    BYTE PTR [rdi],al
  601181:	00 00                	add    BYTE PTR [rax],al
  601183:	00 00                	add    BYTE PTR [rax],al
  601185:	00 00                	add    BYTE PTR [rax],al
  601187:	00 b0 04 40 00 00    	add    BYTE PTR [rax+0x4004],dh
  60118d:	00 00                	add    BYTE PTR [rax],al
  60118f:	00 08                	add    BYTE PTR [rax],cl
  601191:	00 00                	add    BYTE PTR [rax],al
  601193:	00 00                	add    BYTE PTR [rax],al
  601195:	00 00                	add    BYTE PTR [rax],al
  601197:	00 18                	add    BYTE PTR [rax],bl
  601199:	00 00                	add    BYTE PTR [rax],al
  60119b:	00 00                	add    BYTE PTR [rax],al
  60119d:	00 00                	add    BYTE PTR [rax],al
  60119f:	00 09                	add    BYTE PTR [rcx],cl
  6011a1:	00 00                	add    BYTE PTR [rax],al
  6011a3:	00 00                	add    BYTE PTR [rax],al
  6011a5:	00 00                	add    BYTE PTR [rax],al
  6011a7:	00 18                	add    BYTE PTR [rax],bl
  6011a9:	00 00                	add    BYTE PTR [rax],al
  6011ab:	00 00                	add    BYTE PTR [rax],al
  6011ad:	00 00                	add    BYTE PTR [rax],al
  6011af:	00 fe                	add    dh,bh
  6011b1:	ff                   	(bad)  
  6011b2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  6011b5:	00 00                	add    BYTE PTR [rax],al
  6011b7:	00 90 04 40 00 00    	add    BYTE PTR [rax+0x4004],dl
  6011bd:	00 00                	add    BYTE PTR [rax],al
  6011bf:	00 ff                	add    bh,bh
  6011c1:	ff                   	(bad)  
  6011c2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  6011c5:	00 00                	add    BYTE PTR [rax],al
  6011c7:	00 01                	add    BYTE PTR [rcx],al
  6011c9:	00 00                	add    BYTE PTR [rax],al
  6011cb:	00 00                	add    BYTE PTR [rax],al
  6011cd:	00 00                	add    BYTE PTR [rax],al
  6011cf:	00 f0                	add    al,dh
  6011d1:	ff                   	(bad)  
  6011d2:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
  6011d5:	00 00                	add    BYTE PTR [rax],al
  6011d7:	00 70 04             	add    BYTE PTR [rax+0x4],dh
  6011da:	40 00 00             	add    BYTE PTR [rax],al
	...

Disassembly of section .got:

0000000000601240 <.got>:
	...

Disassembly of section .got.plt:

0000000000601248 <_GLOBAL_OFFSET_TABLE_>:
  601248:	b0 10                	mov    al,0x10
  60124a:	60                   	(bad)  
	...
  60125f:	00 2e                	add    BYTE PTR [rsi],ch
  601261:	06                   	(bad)  
  601262:	40 00 00             	add    BYTE PTR [rax],al
  601265:	00 00                	add    BYTE PTR [rax],al
  601267:	00 3e                	add    BYTE PTR [rsi],bh
  601269:	06                   	(bad)  
  60126a:	40 00 00             	add    BYTE PTR [rax],al
  60126d:	00 00                	add    BYTE PTR [rax],al
  60126f:	00 4e 06             	add    BYTE PTR [rsi+0x6],cl
  601272:	40 00 00             	add    BYTE PTR [rax],al
  601275:	00 00                	add    BYTE PTR [rax],al
  601277:	00 5e 06             	add    BYTE PTR [rsi+0x6],bl
  60127a:	40 00 00             	add    BYTE PTR [rax],al
  60127d:	00 00                	add    BYTE PTR [rax],al
  60127f:	00 6e 06             	add    BYTE PTR [rsi+0x6],ch
  601282:	40 00 00             	add    BYTE PTR [rax],al
  601285:	00 00                	add    BYTE PTR [rax],al
  601287:	00 7e 06             	add    BYTE PTR [rsi+0x6],bh
  60128a:	40 00 00             	add    BYTE PTR [rax],al
  60128d:	00 00                	add    BYTE PTR [rax],al
  60128f:	00 8e 06 40 00 00    	add    BYTE PTR [rsi+0x4006],cl
  601295:	00 00                	add    BYTE PTR [rax],al
  601297:	00 9e 06 40 00 00    	add    BYTE PTR [rsi+0x4006],bl
  60129d:	00 00                	add    BYTE PTR [rax],al
  60129f:	00 ae 06 40 00 00    	add    BYTE PTR [rsi+0x4006],ch
  6012a5:	00 00                	add    BYTE PTR [rax],al
  6012a7:	00 be 06 40 00 00    	add    BYTE PTR [rsi+0x4006],bh
  6012ad:	00 00                	add    BYTE PTR [rax],al
  6012af:	00 ce                	add    dh,cl
  6012b1:	06                   	(bad)  
  6012b2:	40 00 00             	add    BYTE PTR [rax],al
  6012b5:	00 00                	add    BYTE PTR [rax],al
  6012b7:	00 de                	add    dh,bl
  6012b9:	06                   	(bad)  
  6012ba:	40 00 00             	add    BYTE PTR [rax],al
  6012bd:	00 00                	add    BYTE PTR [rax],al
  6012bf:	00 ee                	add    dh,ch
  6012c1:	06                   	(bad)  
  6012c2:	40 00 00             	add    BYTE PTR [rax],al
  6012c5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

00000000006012e0 <__data_start>:
	...

0000000000601300 <port>:
  601300:	b8 22 00 00 03       	mov    eax,0x3000022

0000000000601304 <count>:
  601304:	03 00                	add    eax,DWORD PTR [rax]
	...

0000000000601320 <eventbuffer>:
  601320:	e8 0c 40 00 00       	call   605331 <_end+0x36e1>
  601325:	00 00                	add    BYTE PTR [rax],al
  601327:	00 eb                	add    bl,ch
  601329:	0c 40                	or     al,0x40
  60132b:	00 00                	add    BYTE PTR [rax],al
  60132d:	00 00                	add    BYTE PTR [rax],al
  60132f:	00 ee                	add    dh,ch
  601331:	0c 40                	or     al,0x40
  601333:	00 00                	add    BYTE PTR [rax],al
  601335:	00 00                	add    BYTE PTR [rax],al
  601337:	00 e8                	add    al,ch
  601339:	0c 40                	or     al,0x40
  60133b:	00 00                	add    BYTE PTR [rax],al
  60133d:	00 00                	add    BYTE PTR [rax],al
  60133f:	00 eb                	add    bl,ch
  601341:	0c 40                	or     al,0x40
  601343:	00 00                	add    BYTE PTR [rax],al
  601345:	00 00                	add    BYTE PTR [rax],al
  601347:	00 ee                	add    dh,ch
  601349:	0c 40                	or     al,0x40
  60134b:	00 00                	add    BYTE PTR [rax],al
  60134d:	00 00                	add    BYTE PTR [rax],al
  60134f:	00 f1                	add    cl,dh
  601351:	0c 40                	or     al,0x40
  601353:	00 00                	add    BYTE PTR [rax],al
  601355:	00 00                	add    BYTE PTR [rax],al
  601357:	00 e8                	add    al,ch
  601359:	0c 40                	or     al,0x40
  60135b:	00 00                	add    BYTE PTR [rax],al
  60135d:	00 00                	add    BYTE PTR [rax],al
  60135f:	00 eb                	add    bl,ch
  601361:	0c 40                	or     al,0x40
  601363:	00 00                	add    BYTE PTR [rax],al
  601365:	00 00                	add    BYTE PTR [rax],al
  601367:	00 f1                	add    cl,dh
  601369:	0c 40                	or     al,0x40
  60136b:	00 00                	add    BYTE PTR [rax],al
  60136d:	00 00                	add    BYTE PTR [rax],al
  60136f:	00 ee                	add    dh,ch
  601371:	0c 40                	or     al,0x40
  601373:	00 00                	add    BYTE PTR [rax],al
  601375:	00 00                	add    BYTE PTR [rax],al
	...

0000000000601378 <head>:
  601378:	f8                   	clc    
  601379:	0c 40                	or     al,0x40
  60137b:	00 00                	add    BYTE PTR [rax],al
  60137d:	00 00                	add    BYTE PTR [rax],al
	...

0000000000601380 <countbuf>:
  601380:	21 0d 40 00 00 00    	and    DWORD PTR [rip+0x40],ecx        # 6013c6 <testbuff+0x6>
  601386:	00 00                	add    BYTE PTR [rax],al
  601388:	23 0d 40 00 00 00    	and    ecx,DWORD PTR [rip+0x40]        # 6013ce <testbuff+0xe>
  60138e:	00 00                	add    BYTE PTR [rax],al
  601390:	25 0d 40 00 00       	and    eax,0x400d
  601395:	00 00                	add    BYTE PTR [rax],al
  601397:	00 27                	add    BYTE PTR [rdi],ah
  601399:	0d 40 00 00 00       	or     eax,0x40
  60139e:	00 00                	add    BYTE PTR [rax],al
  6013a0:	29 0d 40 00 00 00    	sub    DWORD PTR [rip+0x40],ecx        # 6013e6 <testbuff+0x26>
  6013a6:	00 00                	add    BYTE PTR [rax],al
  6013a8:	2b 0d 40 00 00 00    	sub    ecx,DWORD PTR [rip+0x40]        # 6013ee <testbuff+0x2e>
	...

00000000006013c0 <testbuff>:
  6013c0:	3c 3f                	cmp    al,0x3f
  6013c2:	78 6d                	js     601431 <testbuff+0x71>
  6013c4:	6c                   	ins    BYTE PTR es:[rdi],dx
  6013c5:	20 76 65             	and    BYTE PTR [rsi+0x65],dh
  6013c8:	72 73                	jb     60143d <testbuff+0x7d>
  6013ca:	69 6f 6e 3d 27 31 2e 	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
  6013d1:	30 27                	xor    BYTE PTR [rdi],ah
  6013d3:	20 65 6e             	and    BYTE PTR [rbp+0x6e],ah
  6013d6:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
  6013d9:	69 6e 67 3d 27 67 62 	imul   ebp,DWORD PTR [rsi+0x67],0x6267273d
  6013e0:	32 33                	xor    dh,BYTE PTR [rbx]
  6013e2:	31 32                	xor    DWORD PTR [rdx],esi
  6013e4:	27                   	(bad)  
  6013e5:	20 3f                	and    BYTE PTR [rdi],bh
  6013e7:	3e                   	ds
  6013e8:	3c 6e                	cmp    al,0x6e
  6013ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  6013eb:	74 65                	je     601452 <testbuff+0x92>
  6013ed:	20 69 64             	and    BYTE PTR [rcx+0x64],ch
  6013f0:	3d 27 33 39 27       	cmp    eax,0x27393327
  6013f5:	3e                   	ds
  6013f6:	3c 74                	cmp    al,0x74
  6013f8:	69 74 6c 65 3e 50 72 	imul   esi,DWORD PTR [rsp+rbp*2+0x65],0x6f72503e
  6013ff:	6f 
  601400:	62                   	(bad)  
  601401:	6c                   	ins    BYTE PTR es:[rdi],dx
  601402:	65                   	gs
  601403:	6d                   	ins    DWORD PTR es:[rdi],dx
  601404:	41 63 6b 3c          	movsxd ebp,DWORD PTR [r11+0x3c]
  601408:	2f                   	(bad)  
  601409:	74 69                	je     601474 <testbuff+0xb4>
  60140b:	74 6c                	je     601479 <testbuff+0xb9>
  60140d:	65                   	gs
  60140e:	3e                   	ds
  60140f:	3c 6d                	cmp    al,0x6d
  601411:	65                   	gs
  601412:	73 73                	jae    601487 <testbuff+0xc7>
  601414:	61                   	(bad)  
  601415:	67 65 3e 41 33 3c 2f 	gs xor edi,DWORD PTR ds:gs:[r15d+ebp*1]
  60141c:	6d                   	ins    DWORD PTR es:[rdi],dx
  60141d:	65                   	gs
  60141e:	73 73                	jae    601493 <testbuff+0xd3>
  601420:	61                   	(bad)  
  601421:	67                   	addr32
  601422:	65                   	gs
  601423:	3e                   	ds
  601424:	3c 2f                	cmp    al,0x2f
  601426:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  601427:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  601428:	74 65                	je     60148f <testbuff+0xcf>
  60142a:	3e 00 00             	add    BYTE PTR ds:[rax],al
	...

Disassembly of section .bss:

00000000006017c0 <completed.6349>:
	...

00000000006017c8 <dtor_idx.6351>:
	...

00000000006017d0 <ievent>:
	...

00000000006017e0 <sockfd>:
	...

0000000000601800 <data>:
	...

0000000000601c00 <buffer>:
	...

0000000000601c30 <z>:
	...

0000000000601c40 <adr_srvr>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 47 4e             	sub    BYTE PTR [rdi+0x4e],al
   8:	55                   	push   rbp
   9:	29 20                	sub    DWORD PTR [rax],esp
   b:	34 2e                	xor    al,0x2e
   d:	34 2e                	xor    al,0x2e
   f:	37                   	(bad)  
  10:	20 32                	and    BYTE PTR [rdx],dh
  12:	30 31                	xor    BYTE PTR [rcx],dh
  14:	32 30                	xor    dh,BYTE PTR [rax]
  16:	33 31                	xor    esi,DWORD PTR [rcx]
  18:	33 20                	xor    esp,DWORD PTR [rax]
  1a:	28 52 65             	sub    BYTE PTR [rdx+0x65],dl
  1d:	64 20 48 61          	and    BYTE PTR fs:[rax+0x61],cl
  21:	74 20                	je     43 <_init-0x4005bd>
  23:	34 2e                	xor    al,0x2e
  25:	34 2e                	xor    al,0x2e
  27:	37                   	(bad)  
  28:	2d                   	.byte 0x2d
  29:	34 29                	xor    al,0x29
	...
